# Generated by Django 5.2 on 2025-04-29 18:20

import core.managers
import core.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountModel',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(blank=True, default=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, max_length=150, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('nickname', models.CharField(blank=True, max_length=250, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'tb_user',
            },
            managers=[
                ('objects', core.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RepoModel',
            fields=[
                ('repo_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('repo_name', models.CharField(blank=True, max_length=250, null=True)),
                ('repo_description', models.CharField(blank=True, max_length=250, null=True)),
                ('repo_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'repo',
                'verbose_name_plural': 'repos',
                'db_table': 'tb_repo',
            },
        ),
        migrations.CreateModel(
            name='RepoObjectModel',
            fields=[
                ('repo_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('upload', models.FileField(upload_to=core.models.user_directory_path)),
                ('repo_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.repomodel')),
            ],
            options={
                'verbose_name': 'repo_object',
                'verbose_name_plural': 'repo_objects',
                'db_table': 'tb_repo_object',
            },
        ),
    ]
